2-matrix_divided.py
============================

Test function for ``matrix_divided``
---------------------

function of the module that divides two matrix
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	
Divide a matrix:
by int 
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)	 
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)	 
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

by float
	>>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
	[[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]
	
positive and negative ints
	>>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
	[[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]
	
Errors
======

Zero Error - divided by zero
 	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    	Traceback (most recent call last):
    	ZeroDivisionError: division by zero
    	
Type Error

Empty matrix
	>>> matrix_divided([], 10)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


Rows not equal
	>>> matrix_divided([[1, 3], [4, 5, 6], [7]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

elements arent int/float
	>>> matrix_divided([["B", "unda"], ["Fat", "Nyash"]], 10)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

element 2
	>>> matrix_divided([[1,9 + 1j,3],[1.2, "", 1.5]], 5)
	Traceback (most recent call last):
	TypeError: unsupported operand type(s) for /: 'str' and 'int'
	
div as a list

	>>> matrix_divided([[5.7, 8.1], [7.7, 4.9]], [2])
	Traceback (most recent call last):
	TypeError: div must be a number

div as a string

	>>> matrix_divided([[10, 50], [30, 20]], "10")
	Traceback (most recent call last):
	TypeError: div must be a number
	
